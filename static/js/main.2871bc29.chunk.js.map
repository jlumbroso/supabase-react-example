{"version":3,"sources":["supabaseClient.js","Auth.js","Avatar.js","Account.js","App.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","process","Auth","useState","loading","setLoading","email","setEmail","handleLogin","auth","signInWithOtp","error","alert","error_description","message","className","type","placeholder","value","onChange","e","target","onClick","preventDefault","disabled","Avatar","url","size","onUpload","avatarUrl","setAvatarUrl","uploading","setUploading","path","storage","from","download","data","URL","createObjectURL","console","log","event","files","length","Error","file","fileExt","name","split","pop","fileName","Math","random","filePath","upload","uploadError","useEffect","downloadImage","src","alt","style","height","width","htmlFor","visibility","position","id","accept","Account","session","username","setUsername","website","setWebsite","avatar_url","updateProfile","user","updates","updated_at","Date","upsert","select","eq","single","warn","getProfile","signOut","Home","setSession","getSession","then","onAuthStateChange","_event","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2871bc29.chunk.js","sourcesContent":["/**\n * lib/supabaseClient.js\n * Helper to initialize the Supabase client.\n */\n\nimport { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n","import { useState } from 'react'\nimport { supabase } from './supabaseClient'\n\nexport default function Auth() {\n  const [loading, setLoading] = useState(false)\n  const [email, setEmail] = useState('')\n\n  const handleLogin = async (email) => {\n    try {\n      setLoading(true)\n      const { error } = await supabase.auth.signInWithOtp({ email })\n      if (error) throw error\n      alert('Check your email for the login link!')\n    } catch (error) {\n      alert(error.error_description || error.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"row flex flex-center\">\n      <div className=\"col-6 form-widget\">\n        <h1 className=\"header\">Supabase + React</h1>\n        <p className=\"description\">Sign in via magic link with your email below</p>\n        <div>\n          <input\n            className=\"inputField\"\n            type=\"email\"\n            placeholder=\"Your email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div>\n          <button\n            onClick={(e) => {\n              e.preventDefault()\n              handleLogin(email)\n            }}\n            className={'button block'}\n            disabled={loading}\n          >\n            {loading ? <span>Loading</span> : <span>Send magic link</span>}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { supabase } from './supabaseClient'\n\nexport default function Avatar({ url, size, onUpload }) {\n  const [avatarUrl, setAvatarUrl] = useState(null)\n  const [uploading, setUploading] = useState(false)\n\n  useEffect(() => {\n    if (url) downloadImage(url)\n  }, [url])\n\n  async function downloadImage(path) {\n    try {\n      const { data, error } = await supabase.storage.from('avatars').download(path)\n      if (error) {\n        throw error\n      }\n      const url = URL.createObjectURL(data)\n      setAvatarUrl(url)\n    } catch (error) {\n      console.log('Error downloading image: ', error.message)\n    }\n  }\n\n  async function uploadAvatar(event) {\n    try {\n      setUploading(true)\n\n      if (!event.target.files || event.target.files.length === 0) {\n        throw new Error('You must select an image to upload.')\n      }\n\n      const file = event.target.files[0]\n      const fileExt = file.name.split('.').pop()\n      const fileName = `${Math.random()}.${fileExt}`\n      const filePath = `${fileName}`\n\n      let { error: uploadError } = await supabase.storage.from('avatars').upload(filePath, file)\n\n      if (uploadError) {\n        throw uploadError\n      }\n\n      onUpload(filePath)\n    } catch (error) {\n      alert(error.message)\n    } finally {\n      setUploading(false)\n    }\n  }\n\n  return (\n    <div>\n      {avatarUrl ? (\n        <img\n          src={avatarUrl}\n          alt=\"Avatar\"\n          className=\"avatar image\"\n          style={{ height: size, width: size }}\n        />\n      ) : (\n        <div className=\"avatar no-image\" style={{ height: size, width: size }} />\n      )}\n      <div style={{ width: size }}>\n        <label className=\"button primary block\" htmlFor=\"single\">\n          {uploading ? 'Uploading ...' : 'Upload'}\n        </label>\n        <input\n          style={{\n            visibility: 'hidden',\n            position: 'absolute',\n          }}\n          type=\"file\"\n          id=\"single\"\n          accept=\"image/*\"\n          onChange={uploadAvatar}\n          disabled={uploading}\n        />\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { supabase } from './supabaseClient'\nimport Avatar from './Avatar'\n\nexport default function Account({ session }) {\n  const [loading, setLoading] = useState(true)\n  const [username, setUsername] = useState(null)\n  const [website, setWebsite] = useState(null)\n  const [avatar_url, setAvatarUrl] = useState(null)\n\n  useEffect(() => {\n    async function getProfile() {\n      try {\n        setLoading(true)\n        const { user } = session\n\n        let { data, error } = await supabase\n          .from('profiles')\n          .select(`username, website, avatar_url`)\n          .eq('id', user.id)\n          .single()\n\n        if (error) {\n          throw error\n        }\n\n        setUsername(data.username)\n        setWebsite(data.website)\n        setAvatarUrl(data.avatar_url)\n      } catch (error) {\n        console.warn(error.message)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    getProfile()\n  }, [session])\n\n  async function updateProfile({ username, website, avatar_url }) {\n    try {\n      setLoading(true)\n      const { user } = session\n\n      const updates = {\n        id: user.id,\n        username,\n        website,\n        avatar_url,\n        updated_at: new Date(),\n      }\n\n      let { error } = await supabase.from('profiles').upsert(updates)\n\n      if (error) {\n        throw error\n      }\n    } catch (error) {\n      alert(error.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"form-widget\">\n      <Avatar\n        url={avatar_url}\n        size={150}\n        onUpload={(url) => {\n          setAvatarUrl(url)\n          updateProfile({ username, website, avatar_url: url })\n        }}\n      />\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <input id=\"email\" type=\"text\" value={session.user.email} disabled />\n      </div>\n      <div>\n        <label htmlFor=\"username\">Name</label>\n        <input\n          id=\"username\"\n          type=\"text\"\n          value={username || ''}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"website\">Website</label>\n        <input\n          id=\"website\"\n          type=\"website\"\n          value={website || ''}\n          onChange={(e) => setWebsite(e.target.value)}\n        />\n      </div>\n\n      <div>\n        <button\n          className=\"button block primary\"\n          onClick={() => updateProfile({ username, website, avatar_url })}\n          disabled={loading}\n        >\n          {loading ? 'Loading ...' : 'Update'}\n        </button>\n      </div>\n\n      <div>\n        <button className=\"button block\" onClick={() => supabase.auth.signOut()}>\n          Sign Out\n        </button>\n      </div>\n    </div>\n  )\n}\n","import './index.css'\nimport { useState, useEffect } from 'react'\nimport { supabase } from './supabaseClient'\nimport Auth from './Auth'\nimport Account from './Account'\n\nexport default function Home() {\n  const [session, setSession] = useState(null)\n\n  useEffect(() => {\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session)\n    })\n\n    supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session)\n    })\n  }, [])\n\n  return (\n    <div className=\"container\" style={{ padding: '50px 0 100px 0' }}>\n      {!session ? <Auth /> : <Account key={session.user.id} session={session} />}\n    </div>\n  )\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}